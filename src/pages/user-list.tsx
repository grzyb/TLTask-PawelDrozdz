import * as React from 'react';
import Head from 'next/head';
import { GetServerSideProps, NextPageContext } from 'next';
import { Avatar, Button, Card, CardContent, List, ListItem, ListItemAvatar, ListItemButton, ListItemText, Typography } from '@mui/material';
import { Female as FemaleIcon, Male as MaleIcon } from '@mui/icons-material';

const USER_LIST_API_URL = "http://localhost:3000/api/userList"

import styles from '@/styles/Home.module.scss';

interface User {
  id: string;
  firstName: string;
  lastName: string;
  email: string;
  gender: string;
  image: string | undefined;
}

interface UserListProps {
  users: User[];
}

const UserList = ({ users }: UserListProps) => {1
  const getMoreUsers = async () => {
    // TODO Implement
  }
  const listItems = users.map(user => (
    <ListItem
      key={`user-${user.id}`}
      disablePadding
      secondaryAction={user.gender === "M" ? <MaleIcon sx={{ color: "#2196f3" }} /> : <FemaleIcon sx={{ color: "#e91e63" }} />}
    >
      <ListItemButton>
        <ListItemAvatar>
          <Avatar
            alt={`${user.firstName} ${user.lastName}`}
            src={user.image}
          />
        </ListItemAvatar>
        <ListItemText primary={`${user.firstName} ${user.lastName}`} secondary={user.email} />
      </ListItemButton>
    </ListItem>
  ));

  return (
    <>
      <Head>
        <title>Awesome User List</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Card>
          <CardContent>
            <Typography sx={{ fontSize: 14 }} color="text.secondary" gutterBottom>
              I've limited the list to 20 positions for performance reasons.<br />Need to add dynamic loading with Intersection Observer or add "Load more" button.
            </Typography>
            <List>
              {listItems}
            </List>
          </CardContent>
        </Card>
        <Button disabled onClick={() => getMoreUsers()}>
          Get more!
        </Button>
      </main>
    </>
  );
}

export default UserList;

export const getServerSideProps: GetServerSideProps<{ users }> = async (context: NextPageContext) => {
  const { req } = context;

  const userListResponse = await fetch(USER_LIST_API_URL,
    {
      method: 'POST',
      headers: {
        "Authorization": `Bearer ${req.cookies["sessionJwt"]}`
      }
    }
  );

  if (!userListResponse.ok) {
    return {
      redirect: {
        destination: "/"
      }
    }
  }

  return {
    props: {
      users: await userListResponse.json()
    }
  }
}